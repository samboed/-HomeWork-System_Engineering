`timescale 1 ns/ 1 ns
module Task2_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg bit_in;
reg clk;
reg enable;
reg num_end;
// wires                                               
wire res_out;

// assign statements (if any)                          
Task2 i1 (
// port map - connection between master ports and signals/registers   
	.bit_in(bit_in),
	.clk(clk),
	.enable(enable),
	.num_end(num_end),
	.res_out(res_out)
);
initial                                                
begin 
	clk = 0;
	num_end = 0;
	enable = 1;
	bit_in = 1'b0; 
	#10                                             
        bit_in = 1'b1;
        #10                             
        bit_in = 1'b1;
	#10
	enable = 0;
	bit_in = 1'b0;
	num_end = 1;
	#10 
	num_end = 0;
	enable = 1;
	bit_in = 1'b1; 
	#10                                             
        bit_in = 1'b0;
        #10                             
        bit_in = 1'b1;
	#10
	bit_in = 1'b0;
	#10
	bit_in = 1'b1;
	#10
	bit_in = 1'b1;
	#10
	enable = 0;
	bit_in = 1'b0;
	num_end = 1;
	#10 
	num_end = 0;              
end                                                    
always                                                 
	#5 clk = ~clk;                                          
endmodule
